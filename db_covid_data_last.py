# -*- coding: utf-8 -*-
"""DB covid Data last.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ni6yr-VWGvx6KompoFMgGVqxMqlSmAwK
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
# %matplotlib inline

from google.colab import files
uploaded = files.upload()

step1 = pd.read_excel('DB-covid-vague1-15-03-2021-usef.xlsx')
step1["Consentement"].count()

step1["Consentement"][4]

step1



List_of_non_important_rows = []
for i in range(2991):
  if step1["Consentement"][i]!=1:
    List_of_non_important_rows.append(i)
List_of_important_rows = []
for i in range(2991):
  if step1["Consentement"][i]==1:
    List_of_important_rows.append(i)

step2 = step1.drop(List_of_non_important_rows)
step2

missing_step2=(step2.count()/468)*100
missing_step2.plot()

step3=step2.interpolate()

missing_step3=(step3.count()/468)*100
missing_step3.plot()



df=step3[['RESedeq_t2','Buedi_t2','Bdedi_t2','BCCies_t2','EPRies_t2','HSCies_t2','UPEies_t']]
df1=step3[['Buedi_t2','Bdedi_t2','BCCies_t2','EPRies_t2','HSCies_t2','UPEies_t']]
df2=step3[['RESedeq_t2','Bdedi_t2','BCCies_t2','EPRies_t2','HSCies_t2','UPEies_t']]
df3=step3[['RESedeq_t2','Buedi_t2','BCCies_t2','EPRies_t2','HSCies_t2','UPEies_t']]
df4=step3[['RESedeq_t2','Buedi_t2','Bdedi_t2','EPRies_t2','HSCies_t2','UPEies_t']]
df5=step3[['RESedeq_t2','Buedi_t2','Bdedi_t2','BCCies_t2','HSCies_t2','UPEies_t']]
df6=step3[['RESedeq_t2','Buedi_t2','Bdedi_t2','BCCies_t2','EPRies_t2','UPEies_t']]
df7=step3[['RESedeq_t2','Buedi_t2','Bdedi_t2','BCCies_t2','EPRies_t2','HSCies_t2']]

"""Missing values with mean and clustering

"""

df_mean = df
df_mean1 = df1
df_mean2 = df2
df_mean3 = df3
df_mean4 = df4
df_mean5 = df5
df_mean6 = df6
df_mean7 = df7

df_mean = df.replace(np.nan, df.mean())
df_mean1 = df1.replace(np.nan, df.mean())
df_mean2 = df2.replace(np.nan, df.mean())
df_mean3 = df3.replace(np.nan, df.mean())
df_mean4 = df4.replace(np.nan, df.mean())
df_mean5 = df5.replace(np.nan, df.mean())
df_mean6 = df6.replace(np.nan, df.mean())
df_mean7 = df7.replace(np.nan, df.mean())

df_mean0=pd.DataFrame.from_records(df_mean.values,columns=['RESedeq_t2','Buedi_t2','Bdedi_t2','BCCies_t2','EPRies_t2','HSCies_t2','UPEies_t'])
df_mean1=pd.DataFrame.from_records(df_mean1.values,columns=['Buedi_t2','Bdedi_t2','BCCies_t2','EPRies_t2','HSCies_t2','UPEies_t'])
df_mean2=pd.DataFrame.from_records(df_mean2.values,columns=['RESedeq_t2','Bdedi_t2','BCCies_t2','EPRies_t2','HSCies_t2','UPEies_t'])
df_mean3=pd.DataFrame.from_records(df_mean3.values,columns=['RESedeq_t2','Buedi_t2','BCCies_t2','EPRies_t2','HSCies_t2','UPEies_t'])
df_mean4=pd.DataFrame.from_records(df_mean4.values,columns=['RESedeq_t2','Buedi_t2','Bdedi_t2','EPRies_t2','HSCies_t2','UPEies_t'])
df_mean5=pd.DataFrame.from_records(df_mean5.values,columns=['RESedeq_t2','Buedi_t2','Bdedi_t2','BCCies_t2','HSCies_t2','UPEies_t'])
df_mean6=pd.DataFrame.from_records(df_mean6.values,columns=['RESedeq_t2','Buedi_t2','Bdedi_t2','BCCies_t2','EPRies_t2','UPEies_t'])
df_mean7=pd.DataFrame.from_records(df_mean7.values,columns=['RESedeq_t2','Buedi_t2','Bdedi_t2','BCCies_t2','EPRies_t2','HSCies_t2'])

df_mean.corr()

from sklearn.cluster import AgglomerativeClustering

cluster1 = AgglomerativeClustering(n_clusters=7, affinity='euclidean', linkage='ward')
FC=cluster1.fit_predict(df_mean)

from sklearn.cluster import AgglomerativeClustering

cluster2 = AgglomerativeClustering(n_clusters=7, affinity='euclidean', linkage='ward')
SC=cluster2.fit_predict(df_mean1)

from sklearn.cluster import AgglomerativeClustering

cluster3 = AgglomerativeClustering(n_clusters=7, affinity='euclidean', linkage='ward')
StC=cluster3.fit_predict(df_mean2)

from sklearn.cluster import AgglomerativeClustering

cluster4 = AgglomerativeClustering(n_clusters=7, affinity='euclidean', linkage='ward')
StC4=cluster4.fit_predict(df_mean3)

from sklearn.cluster import AgglomerativeClustering

cluster5 = AgglomerativeClustering(n_clusters=7, affinity='euclidean', linkage='ward')
StC5=cluster5.fit_predict(df_mean4)

from sklearn.cluster import AgglomerativeClustering

cluster6 = AgglomerativeClustering(n_clusters=7, affinity='euclidean', linkage='ward')
StC6=cluster6.fit_predict(df_mean5)

from sklearn.cluster import AgglomerativeClustering

cluster7 = AgglomerativeClustering(n_clusters=7, affinity='euclidean', linkage='ward')
StC7=cluster7.fit_predict(df_mean6)

from sklearn.cluster import AgglomerativeClustering

cluster8 = AgglomerativeClustering(n_clusters=7, affinity='euclidean', linkage='ward')
StC8=cluster8.fit_predict(df_mean7)

"""# New Section"""

c1=cluster1.labels_
nc0_1=[]
nc1_1=[]
nc2_1=[]
nc3_1=[]
nc4_1=[]
nc5_1=[]
nc6_1=[]
for i in range(len(c1)):
  if c1[i]==0:
    nc0_1.append(i)
  if c1[i]==1:
    nc1_1.append(i)
  if c1[i]==2:
    nc2_1.append(i)
  if c1[i]==3:
    nc3_1.append(i)  
  if c1[i]==4:
    nc4_1.append(i)  
  if c1[i]==5:
    nc5_1.append(i)  
  if c1[i]==6:
    nc6_1.append(i)

c2=cluster2.labels_
nc0_2=[]
nc1_2=[]
nc2_2=[]
nc3_2=[]
nc4_2=[]
nc5_2=[]
nc6_2=[]
for i in range(len(c2)):
  if c2[i]==0:
    nc0_2.append(i)
  if c2[i]==1:
    nc1_2.append(i)
  if c2[i]==2:
    nc2_2.append(i)
  if c2[i]==3:
    nc3_2.append(i)
  if c2[i]==4:
    nc4_2.append(i)    
  if c2[i]==5:
    nc5_2.append(i) 
  if c2[i]==6:
    nc6_2.append(i)

c3=cluster3.labels_
nc0_3=[]
nc1_3=[]
nc2_3=[]
nc3_3=[]
nc4_3=[]
nc5_3=[]
nc6_3=[]

for i in range(len(c3)):
  if c3[i]==0:
    nc0_3.append(i)
  if c3[i]==1:
    nc1_3.append(i)
  if c3[i]==2:
    nc2_3.append(i)
  if c3[i]==3:
    nc3_3.append(i)
  if c3[i]==4:
    nc4_3.append(i)
  if c3[i]==5:
    nc5_3.append(i)
  if c3[i]==6:
    nc6_3.append(i)

c4=cluster4.labels_
nc0_4=[]
nc1_4=[]
nc2_4=[]
nc3_4=[]
nc4_4=[]
nc5_4=[]
nc6_4=[]
for i in range(len(c4)):
  if c4[i]==0:
    nc0_4.append(i)
  if c4[i]==1:
    nc1_4.append(i)
  if c4[i]==2:
    nc2_4.append(i)
  if c4[i]==3:
    nc3_4.append(i)
  if c4[i]==4:
    nc4_4.append(i)
  if c4[i]==5:
    nc5_4.append(i)
  if c4[i]==6:
    nc6_4.append(i)

c5=cluster5.labels_
nc0_5=[]
nc1_5=[]
nc2_5=[]
nc3_5=[]
nc4_5=[]
nc5_5=[]
nc6_5=[]
for i in range(len(c5)):
  if c5[i]==0:
    nc0_5.append(i)
  if c5[i]==1:
    nc1_5.append(i)
  if c5[i]==2:
    nc2_5.append(i)
  if c5[i]==3:
    nc3_5.append(i)
  if c5[i]==4:
    nc4_5.append(i)
  if c5[i]==5:
    nc5_5.append(i)
  if c5[i]==6:
    nc6_5.append(i)

c6=cluster6.labels_
nc0_6=[]
nc1_6=[]
nc2_6=[]
nc3_6=[]
nc4_6=[]
nc5_6=[]
nc6_6=[]
for i in range(len(c6)):
  if c6[i]==0:
    nc0_6.append(i)
  if c6[i]==1:
    nc1_6.append(i)
  if c6[i]==2:
    nc2_6.append(i)
  if c6[i]==3:
    nc3_6.append(i)
  if c6[i]==4:
    nc4_6.append(i)
  if c6[i]==5:
    nc5_6.append(i)
  if c6[i]==6:
    nc6_6.append(i)

c7=cluster7.labels_
nc0_7=[]
nc1_7=[]
nc2_7=[]
nc3_7=[]
nc4_7=[]
nc5_7=[]
nc6_7=[]
for i in range(len(c7)):
  if c7[i]==0:
    nc0_7.append(i)
  if c7[i]==1:
    nc1_7.append(i)
  if c7[i]==2:
    nc2_7.append(i)
  if c7[i]==3:
    nc3_7.append(i)
  if c7[i]==4:
    nc4_7.append(i)
  if c7[i]==5:
    nc5_7.append(i)
  if c7[i]==6:
    nc6_7.append(i)

c8=cluster8.labels_
nc0_8=[]
nc1_8=[]
nc2_8=[]
nc3_8=[]
nc4_8=[]
nc5_8=[]
nc6_8=[]
for i in range(len(c8)):
  if c8[i]==0:
    nc0_8.append(i)
  if c8[i]==1:
    nc1_8.append(i)
  if c8[i]==2:
    nc2_8.append(i)
  if c8[i]==3:
    nc3_8.append(i)
  if c8[i]==4:
    nc4_8.append(i)
  if c8[i]==5:
    nc5_8.append(i)
  if c8[i]==6:
    nc6_8.append(i)

"""# New Section"""

from collections import Counter
 Counter(c1)

Counter(c2)

Counter(c3)

Counter(c4)

Counter(c5)

Counter(c6)

Counter(c7)

Counter(c8)

"""# Cluster Step 1"""

dfnc0_1=df_mean.iloc[nc0_1]
dfnc1_1=df_mean.iloc[nc1_1]
dfnc2_1=df_mean.iloc[nc2_1]
dfnc3_1=df_mean.iloc[nc3_1]
dfnc4_1=df_mean.iloc[nc4_1]
dfnc5_1=df_mean.iloc[nc5_1]
dfnc6_1=df_mean.iloc[nc6_1]

sns.heatmap(dfnc0_1.corr(), annot = True)

sns.heatmap(dfnc1_1.corr(), annot = True)

sns.heatmap(dfnc2_1.corr(), annot = True)

sns.heatmap(dfnc3_1.corr(), annot = True)

sns.heatmap(dfnc4_1.corr(), annot = True)

sns.heatmap(dfnc5_1.corr(), annot = True)

sns.heatmap(dfnc6_1.corr(), annot = True)

"""# Step 2 Remove Column 'RESedeq_t2'

---


"""

dfnc0_2=df_mean1.iloc[nc0_2]
dfnc1_2=df_mean1.iloc[nc1_2]
dfnc2_2=df_mean1.iloc[nc2_2]
dfnc3_2=df_mean1.iloc[nc3_2]
dfnc4_2=df_mean1.iloc[nc4_2]
dfnc5_2=df_mean1.iloc[nc5_2]
dfnc6_2=df_mean1.iloc[nc6_2]

sns.heatmap(dfnc0_2.corr(), annot = True)

sns.heatmap(dfnc1_2.corr(), annot = True)

sns.heatmap(dfnc2_2.corr(), annot = True)

sns.heatmap(dfnc3_2.corr(), annot = True)

sns.heatmap(dfnc4_2.corr(), annot = True)

sns.heatmap(dfnc5_2.corr(), annot = True)

sns.heatmap(dfnc6_2.corr(), annot = True)

"""# Step 3 Remove Column 'Buedi_t2'"""

dfnc0_3=df_mean2.iloc[nc0_3]
dfnc1_3=df_mean2.iloc[nc1_3]
dfnc2_3=df_mean2.iloc[nc2_3]
dfnc3_3=df_mean2.iloc[nc3_3]
dfnc4_3=df_mean2.iloc[nc4_3]
dfnc5_3=df_mean2.iloc[nc5_3]
dfnc6_3=df_mean2.iloc[nc6_3]

sns.heatmap(dfnc0_3.corr(), annot = True)

sns.heatmap(dfnc1_3.corr(), annot = True)

sns.heatmap(dfnc2_3.corr(), annot = True)

sns.heatmap(dfnc3_3.corr(), annot = True)

sns.heatmap(dfnc4_3.corr(), annot = True)

sns.heatmap(dfnc5_3.corr(), annot = True)

sns.heatmap(dfnc6_3.corr(), annot = True)

"""# Step 4 Remove Column 'Bdedi_t2'"""

dfnc0_4=df_mean3.iloc[nc0_4]
dfnc1_4=df_mean3.iloc[nc1_4]
dfnc2_4=df_mean3.iloc[nc2_4]
dfnc3_4=df_mean3.iloc[nc3_4]
dfnc4_4=df_mean3.iloc[nc4_4]
dfnc5_4=df_mean3.iloc[nc5_4]
dfnc6_4=df_mean3.iloc[nc6_4]

sns.heatmap(dfnc0_4.corr(), annot = True)

sns.heatmap(dfnc1_4.corr(), annot = True)

sns.heatmap(dfnc2_4.corr(), annot = True)

sns.heatmap(dfnc3_4.corr(), annot = True)

sns.heatmap(dfnc4_4.corr(), annot = True)

sns.heatmap(dfnc5_4.corr(), annot = True)

sns.heatmap(dfnc6_4.corr(), annot = True)

"""# Step 5 Remove Column 'BCCies_t2'"""

dfnc0_5=df_mean4.iloc[nc0_5]
dfnc1_5=df_mean4.iloc[nc1_5]
dfnc2_5=df_mean4.iloc[nc2_5]
dfnc3_5=df_mean4.iloc[nc3_5]
dfnc4_5=df_mean4.iloc[nc4_5]
dfnc5_5=df_mean4.iloc[nc5_5]
dfnc6_5=df_mean4.iloc[nc6_5]

sns.heatmap(dfnc0_5.corr(), annot = True)

sns.heatmap(dfnc1_5.corr(), annot = True)

sns.heatmap(dfnc2_5.corr(), annot = True)

sns.heatmap(dfnc3_5.corr(), annot = True)

sns.heatmap(dfnc4_5.corr(), annot = True)

sns.heatmap(dfnc5_5.corr(), annot = True)

sns.heatmap(dfnc6_5.corr(), annot = True)

"""# Step 6 Remove Column 'EPRies_t2'"""

dfnc0_6=df_mean5.iloc[nc0_6]
dfnc1_6=df_mean5.iloc[nc1_6]
dfnc2_6=df_mean5.iloc[nc2_6]
dfnc3_6=df_mean5.iloc[nc3_6]
dfnc4_6=df_mean5.iloc[nc4_6]
dfnc5_6=df_mean5.iloc[nc5_6]
dfnc6_6=df_mean5.iloc[nc6_6]

sns.heatmap(dfnc0_6.corr(), annot = True)

sns.heatmap(dfnc1_6.corr(), annot = True)

sns.heatmap(dfnc2_6.corr(), annot = True)

sns.heatmap(dfnc3_6.corr(), annot = True)

sns.heatmap(dfnc4_6.corr(), annot = True)

sns.heatmap(dfnc5_6.corr(), annot = True)

sns.heatmap(dfnc6_6.corr(), annot = True)

"""# Step 7 Remove Column 'HSCies_t2'"""

dfnc0_7=df_mean6.iloc[nc0_7]
dfnc1_7=df_mean6.iloc[nc1_7]
dfnc2_7=df_mean6.iloc[nc2_7]
dfnc3_7=df_mean6.iloc[nc3_7]
dfnc4_7=df_mean6.iloc[nc4_7]
dfnc5_7=df_mean6.iloc[nc5_7]
dfnc6_7=df_mean6.iloc[nc6_7]

sns.heatmap(dfnc0_7.corr(), annot = True)

sns.heatmap(dfnc1_7.corr(), annot = True)

sns.heatmap(dfnc2_7.corr(), annot = True)

sns.heatmap(dfnc3_7.corr(), annot = True)

sns.heatmap(dfnc4_7.corr(), annot = True)

sns.heatmap(dfnc5_7.corr(), annot = True)

sns.heatmap(dfnc6_7.corr(), annot = True)

"""# Step 8 Remove Column 'UPEies_t'"""

dfnc0_8=df_mean7.iloc[nc0_8]
dfnc1_8=df_mean7.iloc[nc1_8]
dfnc2_8=df_mean7.iloc[nc2_8]
dfnc3_8=df_mean7.iloc[nc3_8]
dfnc4_8=df_mean7.iloc[nc4_8]
dfnc5_8=df_mean7.iloc[nc5_8]
dfnc6_8=df_mean7.iloc[nc6_8]

sns.heatmap(dfnc0_8.corr(), annot = True)

sns.heatmap(dfnc1_8.corr(), annot = True)

sns.heatmap(dfnc2_8.corr(), annot = True)

sns.heatmap(dfnc3_8.corr(), annot = True)

sns.heatmap(dfnc4_8.corr(), annot = True)

sns.heatmap(dfnc5_8.corr(), annot = True)

sns.heatmap(dfnc6_8.corr(), annot = True)

"""# New Section"""



sns.heatmap(dfnc.corr(), annot = True)

sns.heatmap(dfnc.corr(), annot = True)

sns.heatmap(dfnc.corr(), annot = True)

sns.heatmap(dfnc.corr(), annot = True)

sns.heatmap(dfnc.corr(), annot = True)

sns.heatmap(dfnc.corr(), annot = True)

sns.heatmap(dfnc.corr(), annot = True)










